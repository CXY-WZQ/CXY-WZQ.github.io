{"version":3,"sources":["index.js"],"names":["Square","_this","Object","_Users_wzq_Desktop_wzq_Learning_react_start_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_wzq_Desktop_wzq_Learning_react_start_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_wzq_Desktop_wzq_Learning_react_start_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","value","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","props","React","Component","Board","i","_this3","squares","renderSquare","Game","_this4","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","_this5","current","winner","moves","map","move","desc","key","href","jumpTo","handleClick","lines","_lines$i","_Users_wzq_Desktop_wzq_Learning_react_start_my_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6bfc3cc.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// 井字棋游戏\n\nclass Square extends React.Component {\n    constructor(){\n        // 在使用 JavaScript class 时，你必须调用 super(); 方法才能在继承父类的子类中正确获取到类型的 this 。\n        super();\n        this.state = {\n            value: null\n        }\n    }\n    render() {\n      return (\n        <button className=\"square\" onClick={() => this.props.onClick()} >\n          {this.props.value}\n        </button>\n      );\n    }\n}\n\n// 函数定义组件,相当于上面的写法\n// function Square(props){\n//     return (\n//         <button className=\"square\" onClick={props.onClick}>\n//             {props.value}\n//         </button>\n//     )\n// }\n  \nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square \n                value={this.props.squares[i]} \n                onClick={() => this.props.onClick(i)} \n            />\n        );\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            stepNumber: 0,\n            xIsNext: true\n        }\n    }\n    handleClick(i){\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        // 当前方格内已经落子/有一方获胜就就无法继\n        if(calculateWinner(squares) || squares[i]){\n            return\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        });\n    }\n    jumpTo(step) {\n        this.setState({\n          stepNumber: step,\n          xIsNext: (step % 2) ? false : true,\n        });\n    }\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Move #' + move :\n                'Game start';\n            return (\n                <li key={move}>\n                    <a href=\"###\" onClick={() => this.jumpTo(move)}>{desc}</a>\n                </li>\n            );\n        });\n\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction calculateWinner(squares){\n    const lines = [\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6]\n    ]\n    for(let i=0; i<lines.length;i++){\n        const [a,b,c] = lines[i];\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n            return squares[a];\n        }\n    }\n    return null;\n}\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}